
package de.htwg_konstanz.ebus.wholesaler.ws.MyWS;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.0
 * 
 */
@WebServiceClient(name = "TobiasDominicWebService", targetNamespace = "http://new.webservice.namespace", wsdlLocation = "file:/Users/tobias/Desktop/wsdl.wsdl")
public class TobiasDominicWebService
    extends Service
{

    private final static URL TOBIASDOMINICWEBSERVICE_WSDL_LOCATION;
    private final static WebServiceException TOBIASDOMINICWEBSERVICE_EXCEPTION;
    private final static QName TOBIASDOMINICWEBSERVICE_QNAME = new QName("http://new.webservice.namespace", "TobiasDominicWebService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/Users/tobias/Desktop/wsdl.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        TOBIASDOMINICWEBSERVICE_WSDL_LOCATION = url;
        TOBIASDOMINICWEBSERVICE_EXCEPTION = e;
    }

    public TobiasDominicWebService() {
        super(__getWsdlLocation(), TOBIASDOMINICWEBSERVICE_QNAME);
    }

    public TobiasDominicWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    /**
     * 
     * @return
     *     returns UpdateCatalogInterface
     */
    @WebEndpoint(name = "TobiasDominicPort")
    public UpdateCatalogInterface getTobiasDominicPort() {
        return super.getPort(new QName("http://new.webservice.namespace", "TobiasDominicPort"), UpdateCatalogInterface.class);
    }

    private static URL __getWsdlLocation() {
        if (TOBIASDOMINICWEBSERVICE_EXCEPTION!= null) {
            throw TOBIASDOMINICWEBSERVICE_EXCEPTION;
        }
        return TOBIASDOMINICWEBSERVICE_WSDL_LOCATION;
    }

}
